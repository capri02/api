/**
 * Created by naveed on 1/31/14.
 */
var restify = require('restify');
var assert = require('assert');

function onRequest(request, response, next)
{
    var client = restify.createStringClient({
        url: 'http://example.com'
    });

    /*
     * Get the requested parameters
     * Loop through each of them
     * Make a JSON string for POST and PUT
     */

    var requestData = Object.keys(request.params);
    var jsonString = '{';

    for (i = 1; i < requestData.length; i++) {
        rdKey = requestData[i];
        jsonString += "" + rdKey + " : " + request.params[rdKey] + ", ";
    }
    jsonString += "}";

    switch (request.route.method) {
        case "GET":
            client.get('/' + request.params[0], function(err, req, res, data) {
                assert.ifError(err);

                response.send(data);
                response.end();
            });
            break;

        case 'POST':
            client.post('/' + request.params[0], jsonString, function(err, req, res, data) {
                assert.ifError(err);

                response.send(data);
                response.end();
            });
            break;

        case 'PUT':
            client.put('/' + request.params[0], jsonString, function(err, req, res, data) {
                assert.ifError(err);

                response.send(data);
                response.end();
            });
            break;

        case 'DELETE':
            client.del('/' + request.params[0], function(err, req, res, data) {
                assert.ifError(err);

                response.send(data);
                response.end();
            });
            break;

        default:
            return next(new restify.InvalidArgumentError('Method not supported'));
    }
//    next();
}

function start()
{
    var server = restify.createServer();

    // set port to either 8888 for local or to whatever Heroku wants.
    var port = Number(process.env.PORT || 8888);

    server.use(restify.fullResponse()).use(restify.bodyParser());
    server.get(/^\/(.*)/, onRequest);
    server.post(/^\/(.*)/, onRequest);
    server.put(/^\/(.*)/, onRequest);
    server.del(/^\/(.*)/, onRequest);
    server.listen(port);

    console.log("Server has started on port " + port);
}

exports.start = start;
